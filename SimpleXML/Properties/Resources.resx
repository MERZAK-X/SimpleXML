<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="XMLGUI_saveCurrent_success" xml:space="preserve">
    <value>File successfully saved to </value>
  </data>
  <data name="success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="XMLGUI_supportedFiles_extension" xml:space="preserve">
    <value>XML file (*.xml)|*.xml|Excel xlsx Sheet (*.xlsx)|*.xlsx|Excel xls (97-2003) sheet (*.xls)|*.xls|CSV Excel Sheet (*.csv)|*.csv</value>
  </data>
  <data name="XMLGUI_supportedfiles_opendialogExtension" xml:space="preserve">
    <value>XML Documents / Excel Tables|*.xml;*.xlsx;*.xls;*.csv|XML files (*.xml)|*.xml|Excel xlsx Sheets (*.xlsx)|*.xlsx|Excel xls (97-2003) sheets (*.xls)|*.xls|CSV Excel Sheets (*.csv)|*.csv|All files (*.*)|*.*</value>
  </data>
  <data name="XMLGUI_xmlfile_dialogextension" xml:space="preserve">
    <value>XML files (*.xml)|*.xml|All files (*.*)|*.*</value>
  </data>
  <data name="XMLGUI_xlsfile_dialogextension" xml:space="preserve">
    <value>Excel xlsx Sheets (*.xlsx)|*.xlsx|Excel xls (97-2003) sheets (*.xls)|*.xls|CSV Excel Sheets (*.csv)|*.csv|All files (*.*)|*.*</value>
  </data>
  <data name="XMLGUI_saveXml_fail_msg" xml:space="preserve">
    <value>Can't save while on read only mode !
Disable read only mode and try again.</value>
  </data>
  <data name="XMLGUI__fail" xml:space="preserve">
    <value>Failure</value>
  </data>
  <data name="XMLGUI_saveEmptyTable_fail_msg" xml:space="preserve">
    <value>Can't export an empty table !
Please create a new document using "File > New (Ctrl + N)" or open an existing one !</value>
  </data>
  <data name="XmlGUI_title_" xml:space="preserve">
    <value>SimpleXML - </value>
  </data>
  <data name="XMLGUI_xlsfile_extention" xml:space="preserve">
    <value>Excel Sheets (*.xlsx)|*.xlsx</value>
  </data>
  <data name="XMLGUI_csvfile_extension" xml:space="preserve">
    <value>CSV Excel Sheets (*.csv)|*.csv</value>
  </data>
  <data name="XMLGUI_saveXls_fail_msg" xml:space="preserve">
    <value>Couldn't export to Excel Sheet xls file !</value>
  </data>
  <data name="XMLGUI_saveCSV_fail_msg" xml:space="preserve">
    <value>Couldn't export to CSV file !</value>
  </data>
  <data name="XmlGUI_exit_msg" xml:space="preserve">
    <value>Are you sure you want to close this window ?
Unsaved progress might be lost !</value>
  </data>
  <data name="XmlGUI_quit_msg" xml:space="preserve">
    <value>Are you sure you want to exit all opened windows ?
Unsaved progress might be lost !</value>
  </data>
  <data name="XmlGUI_exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="XMLGUI__warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="XmlGUI_OpenDoc_fail_msg" xml:space="preserve">
    <value>Could not open selected file !
Please make sure the selected file is a simple valid XML Document / Excel Sheet.</value>
  </data>
  <data name="XmlGUI_OpenXmlDoc_fail_msg" xml:space="preserve">
    <value>Could not open selected file !
Please make sure the selected file is a valid XML Document.</value>
  </data>
  <data name="XmlGUI_OpenXlsSheet_fail_msg" xml:space="preserve">
    <value>Could not open selected file !
Please make sure the selected file is a valid Excel Sheet.</value>
  </data>
  <data name="XmlGUI_Open_wrongXmlExt_msg" xml:space="preserve">
    <value>The dropped file is not an XML Document !</value>
  </data>
  <data name="XmlGUI_DragDrop_wrongExt_msg" xml:space="preserve">
    <value>The dropped file is not an XML Document nor an Excel Sheet !</value>
  </data>
  <data name="XmlGUI_DragDrop_many_msg" xml:space="preserve">
    <value>Many files were dropped!
Only the first selected will be opened.</value>
  </data>
  <data name="XML_NewTable_addExistingColumn_msg" xml:space="preserve">
    <value>The column already exists !</value>
  </data>
  <data name="XML_NewTable_noColumns_msg" xml:space="preserve">
    <value>Cannot create a table without specifying its columns !</value>
  </data>
  <data name="XML_ImportTable_noColumns_msg" xml:space="preserve">
    <value>Cannot create a document from without specifying a database table !</value>
  </data>
  <data name="IEDatabase_columns_mismatch_msg" xml:space="preserve">
    <value>Cannot export to a table with different columns !</value>
  </data>
  <data name="IEDatabase_columns_mismatch" xml:space="preserve">
    <value>Columns mismatch error</value>
  </data>
  <data name="IEDatabase_successExport_msg" xml:space="preserve">
    <value>Table successfully exported to database table "{0}" !</value>
  </data>
  <data name="IEDatabase_successConnection_msg" xml:space="preserve">
    <value>Successfully connected to database "{0}" !</value>
  </data>
  <data name="IEDatabase_connectionFail_msg" xml:space="preserve">
    <value>Could not connect to database. Please make sure your database is reachable and try again !</value>
  </data>
  <data name="XML_NewTable_invalidColumnName_msg" xml:space="preserve">
    <value>Invalid column name provided !</value>
  </data>
  <data name="XML_NewTable_invalidEntityName_msg" xml:space="preserve">
    <value>The given entity name : "{0}" is invalid !
Would you like to use "data" instead ?</value>
  </data>
  <data name="XML_NewTable_invalidImportEntityName_msg" xml:space="preserve">
    <value>The given entity name : "{0}" is invalid !
Would you like to use "{0}" instead ?</value>
  </data>
  <data name="Connection_fail_msg" xml:space="preserve">
    <value>Connection error-{0} : {1}</value>
  </data>
  <data name="XmlGUI__Unsaved_new_title" xml:space="preserve">
    <value>[Unsaved - {0}]</value>
  </data>
  <data name="DatabaseConnection_emptyInstance_msg" xml:space="preserve">
    <value>Instance name is empty !
If there's more than one instance running in the remote server, the connection might fail !</value>
  </data>
  <data name="XmlGUI_saveFile_fail_msg" xml:space="preserve">
    <value>Couldn't save data to {0} !</value>
  </data>
</root>